2002-07-30  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Add rcd-transact-log.[ch]

	* rcd-fetch.c (package_completed_cb): Check to see if the transfer
	failed and send some useful failure info along if so.  Comment out
	cancelling of the other downloads when one of ours fails because
	of the Soup crash.

	* rcd-prefs.c (rcd_prefs_get_remote_server_enabled): Added.
	Checks the configuation file to see if we should run an HTTPS
	server.
	(rcd_prefs_get_remote_server_port): Get the port to run on from
	the config file.

	* rcd-rpc-packsys.c (verify_packages): If verification fails,
	allow shutdown again.
	(download_completed): Added, but incomplete.  If the download
	failed, send it down to the client and allow shutdowns again.  If
	it succeeds, call verify_packages().
	(download_packages): Set download_completed() to be the download
	completion callback instead of verify_packages().
	(packsys_transact): If we're in premium mode, send a transaction
	manifest to the server for logging.

	* rcd-rpc.c (run_server_thread): Removed; moved all of this into
	rcd_rpc_server_start().
	(rcd_rpc_server_start): Take a port parameter.  Start the HTTPS
	server if it's enabled.

	* rcd-transfer-http.c (map_soup_error_to_rcd_transfer_error): Make
	SOUP_ERROR_CANCELLED to RCD_TRANSFER_ERROR_CANCELLED.

	* rcd.c (option_parsing): Added -p options for setting the remote
	server port, and -r for disabling the remote server.
	(signal_handler): Handle SIGINT (ie, ^C in the controlling
	terminal).
	(main): Call rcd_rpc_server_start() with the port specified in -p
	and -r.

2002-07-29  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Install the daemon into $prefix/sbin, like a good
	little daemon should.

	* rcd-rpc-packsys.c (packsys_package_info): Don't send down the
	installed size if it's zero.

2002-07-28  Jon Trowbridge  <trow@ximian.com>

	* rcd-recurring.c: Added.  This is a slightly over-engineered
	framework for handling recurring events.

	* rcd-heartbeat.c: Modified to use the new framework for recurring
	events in rcd-recurring.c.

2002-07-26  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Change the moduledir to be $(libdir)/rcd/modules so
	we don't try to load the RPM and dpkg stubs as modules.

	* rcd-rpc.c (access_control_check): Check to make sure method_info
	is valid before we dereference its privileges.
	
2002-07-25  Frank Belew  <frb@ximian.com>

	* Makefile.am: add libredcarpet.a to libs, add libredcarpet to INCLUDES

2002-07-25  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-packsys.c (run_transaction): Properly handle dry runs.
	(run_transaction): If we just did a dry run, don't log the
	transaction and don't rescan the system packages.
	(dep_get_package_info_cb): Generate a text message for
	RC_RESOLVER_INFO_TYPE_OBSOLETES items.

	* rcd.c (option_parsing): Added the --undump command line option.
	(root_check): Allow non-root without complaining if we have
	undumped.
	(daemonize): Don't daemonize if we have undumped.
	(initialize_rc_world): If we have undumped, initialize the RCWorld
	from the dump file instead of from the machine's package db.
	(initialize_data): Don't download any channel info or
	subscriptions when we have undumped.
	(main): Don't start the heartbeat if we have undumped.

2002-07-24  Joe Shaw  <joe@ximian.com>

	* rcd-rpc.c (run_server_thread): Set the Soup SSL certificate and
	start the server as an HTTPS server.

2002-07-23  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (root_check): Removed a FIXME that didn't really need
	fixing.

	* rcd-rpc-prefs.c (rcd_rpc_prefs_register_methods): Removed a
	FIXME; superuser is probably the right privilege level for
	set_prefs.

	* rcd-log.c (rcd_log): Removed a FIXME that didn't really need
	fixing.

	* rcd-log-entry.c (rcd_log_entry_parse): Skip log lines that
	appear to be malformed.

	* rcd-fetch.c (process_channel_cb): Only store the channel's
	package data if we were able to uncompress it and extract
	it's packages without any obvious errors.

2002-07-23  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (dep_get_package_info_cb): Get the version
	numbers from the RCResolverInfo structs.

2002-07-23  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-util.c (rcd_rc_channel_to_xmlrpc): Put the alias in
	the XML-RPCification of our channel.

	* rcd-pending.c (pending_cleanup_cb): Remove the unused id
	variable.

	* rcd.c (initialize_rc_world): Check for an error on the packman.
	Fail if we find one.

2002-07-23  Joe Shaw  <joe@ximian.com>

	* rcd-cache.c (rcd_cache_entry_new): Initialize the fd to -1.
	(rcd_cache_entry_cancel): If the fd is -1, don't try to close it.

	* rcd-unix-server.c (read_data): Remove the unref from here.
	(conn_accept): And add it here, after we add the watch.

2002-07-23  Jon Trowbridge  <trow@ximian.com>

	* rcd-prefs.c (rcd_prefs_get_heartbeat_interval): Set the default
	heartbeat interval to 21600 (6 hours).
	(rcd_prefs_set_heartbeat_interval): Reject any attempt to set
	the heartbeat interval below 1800 (30 minutes).

2002-07-22  Jon Trowbridge  <trow@ximian.com>

	* rcd-identity.c (rcd_identity_remove_from_password_file): Chmod
	the password file after we re-open it.

	* rcd-rpc-users.c (users_remove): Added.  A wrapper around
	rcd_identity_remove_from_password_file.

2002-07-22  Joe Shaw  <joe@ximian.com>

	* rcd-unix-server.c (read_cred): Set the size of the length before
	calling getsockopt().  This should fix the occassional
	authentication problems on unix sockets.

2002-07-22  Jon Trowbridge  <trow@ximian.com>

	* rcd-pending.c (rcd_pending_cleanup): Re-enabled pending
	cleanup... the problem was not with this code.

	* rcd-fetch.c (rcd_fetch_channel): The ChannelFetchClosure needs
	to hold a reference to the channel.  This fixes a bug which was
	causing us to segfault when repeatedly refreshing the channel
	data.
	(process_channel_cb): Release the closure's reference on the
	channel.

	* rcd-rpc-packsys.c (refresh_channels_cb): Set id_list to NULL
	after we g_slist_free it, so that it won't get freed again in
	check_pending_status_cb.

2002-07-22  Joe Shaw  <joe@ximian.com>

	* rcd-rpc.c (serialize_fault): Fix a compiler warning.
	(run_server_thread): Set the debug level of the "Starting server"
	message to MESSAGE instead of INFO.

	* rcd.c (debug_message_handler): Change the callback to match the new
	signature.  If the message is MESSAGE or more severe, syslog the
	message.
	(initialize_logging): Remove the old syslogging.

2002-07-22  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_transact): Block shutdowns, since we
	don't want to be quitting in the middle of a transaction.
	(run_transaction): After the transaction is finished, allow
	shutdowns again.

	* rcd.c (main): Add a signal handler for SIGTERM and SIGQUIT
	(signal_handler): Added, shuts down the daemon cleanly.

2002-07-22  Jon Trowbridge  <trow@ximian.com>

	* rcd-identity.c (identity_update_cb): Chmod the password file to
	600 after we re-open it.

2002-07-21  Jon Trowbridge  <trow@ximian.com>

	* rcd-pending.c (rcd_pending_cleanup): There seems to be some
	problem with the cleanup function (memory corruption), so I'm
	disabling it for now.

	* rcd-unix-server.c (rcd_unix_server_run_async): If our
	attempt to unlink the old socket path fails when we start up,
	the permission are probably wrong and our attempt to start
	rcd will most likely fail... so print a warning message that
	says so.

	* rcd-rpc.c (run_server_thread): Turn a g_error into
	an rc_debug and an exit.

	* rcd-pending.c (rcd_pending_cleanup): Added.  A static
	function that cleans up old RCDPending objects.
	(rcd_pending_new): Call rcd_pending_cleanup.
	(rcd_pending_lookup_by_id): Call rcd_pending_cleanup.  Mark
	the poll time.
	(get_all_ids_cb): Mark the poll time.
	(rcd_pending_get_all_active_ids): Call rcd_pending_cleanup.

2002-07-20  Joe Shaw  <joe@ximian.com>

	* rcd-transfer-http.c (http_done): Use my
	RCD_SOUP_MESSAGE_IS_ERROR() macro instead of the one in Soup,
	because we don't want to treat 300 responses (redirects) as
	errors.	

2002-07-19  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-util.h: Add RCD_RPC_FAULT_CANT_AUTHENTICATE, which is
	different from PERMISSION_DENIED.

	* rcd-rpc.c (serialize_fault): Rename from
	serialize_permission_fault() and take a fault code and string as
	parameters.

2002-07-19  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc.c (unix_rpc_callback): Only use the rc-passwd file
	if it is secure.
	(soup_rpc_callback): Cause authentication to fail if the
	rc-passwd file isn't secure.

	* rcd.c (main): Check our rc-passwd permissions/ownership right
	when we start up, so that any yelling occurs right away.

	* rcd-identity.c (rcd_identity_password_file_is_secure): Added.
	Check that the permissions/ownership of our rc-passwd aren't such
	that something bad could happen.  If we don't like what we see,
	yell.

	* rcd-rpc-users.c (users_update): Check usernames and
	passwords that are passed in as arguments to our method.

	* rcd-identity.c (rcd_identity_well_formed_username): Added.  Anal
	checking of usernames.
	(rcd_identity_well_formed_password): Added.  Anal checking of
	passwords.

	* rcd-rpc-packsys.c (packsys_package_dependency_info): Added.  A
	new method that returns provides, requires, conflicts and
	obsoletes information.
	(rcd_rpc_packsys_register_methods): Register our new method.

	* rcd-rpc-util.c (rcd_rc_package_dep_slist_to_xmlrpc): Added.
	(assemble_spec): Moved most of the heavy lifting from
	rcd_xmlrpc_to_rc_package_spec to here.
	(rcd_xmlrpc_to_rc_package_spec): Added.  Basically a wrapper
	around assemble_spec.
	(rcd_xmlrpc_to_rc_package_dep): Now uses assemble_spec for most of
	the work.

	* rcd-rpc-users.c (users_get_valid_privileges): Added.  Returns a 
	list of valid privileges.
	(rcd_rpc_users_register_methods): Register our new method.

2002-07-18  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c (all_channels_cb): In the local case, if we have to
	fallback to fetching from the net, add the ids to the list.

	* rcd-rpc-packsys.c (check_pending_status_cb): Added.  Unlock the
	packsys lock if all of the transfers have finished.
	(refresh_channels_cb): Set up the check_pending_status_cb()
	handler.
	(packsys_refresh_all_channels): Check for a lock and throw a fault
	if we're locked.

	* rcd-rpc-util.h: Add a RCD_RPC_FAULT_LOCKED fault.

2002-07-17  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-util.c (rcd_rc_package_from_xmlrpc_package): If we don't
	have a channel associated, first check to see if the
	"package_data" key is set, because then we know it's actually a
	streamed package.  Else check for a "package_filename" key,
	because then we know it's actually a reference to a local file.
	Otherwise, check for system packages like usual.

2002-07-16  Joe Shaw  <joe@ximian.com>

	* rcd-prefs.c (rcd_prefs_get_proxy): Added.

	* rcd-transfer-http.c (http_done): Split out the mapping of Soup
	errors to RCDTransfer errors into a separate function and flesh it
	out a little more.
	(http_open): Get the proxy URL and set it.

2002-07-15  Joe Shaw  <joe@ximian.com>

	* gnome-config.c: Remove an unused function to avoid a compiler
	warning.

	* rcd-cache.c (normal_cache_filename_func): Write out the URI's
	querystring if present as well as the path for things like
	packages.php.

	* rcd-fetch.c (merge_paths): A horrible, horrible function to
	merge the broken paths we build in libredcarpet so we always
	download the right thing.
	(rcd_fetch_channel): Use merge_paths().  Check for an error after
	the rcd_transfer_begin().
	(download_package_file): Ditto.

	* rcd-prefs.c (rcd_prefs_get_host): Check RCX_MAGIC first.
	(rcd_prefs_get_premium): Added.  Checks RCX_MAGIC, then RC_MAGIC,
	then the configuration.

	* rcd-transfer-http.c (http_done): Map a few Soup errors to
	RCDTransfer errors.
	(http_info): Don't open a cache entry if we got a 401 or 407.
	(get_mid, get_secret): Added.  Get the MID and secret for a
	machine.
	(get_premium_uri): Added.  Reads the MID and secret and inserts
	them as username and password into the transfer URI.
	(http_open): Get rid of the ALLOW_RCX ifdef.  If we're in premium
	mode, call get_premium_uri(), otherwise use regular old
	soup_uri_new().

	* rcd-transfer.c (pending_file_data_cb): Only update by size if we
	know the file size.
	(pending_file_done_cb): If there was an error, call
	rcd_pending_fail() with the transfer error string.

	* rcd.c (option_parsing): Add a --debug/-d flag which takes a
	level of debugging, like red-carpet and rc-autopull.
	(initialize_logging): Set the display level to the debug level
	specified with the -d flag.  Still defaults to
	RC_DEBUG_LEVEL_INFO.

2002-07-12  Jon Trowbridge  <trow@ximian.com>

	* rcd-privileges.c: Make our first assigned privilege be 1<<1, so
	that the superuser privilege (~0) will always have a unique bit
	set.

	* rcd-rpc-users.c: Added.  Highly preliminary (and still broken)
	XML-RPC wrappers around account-manipulation info.

	* rcd-rpc-packsys.c (rcd_rpc_packsys_register_methods):
	Stringified our required privileges.
	(check_install_package_auth): Hacked to use the new privileges
	system.
	(check_remove_package_auth): Hacked to use the new privileges
	system.
	(check_install_package_auth): Hacked to use the new privileges
	system.

	* rcd-rpc-news.c (rcd_rpc_news_register_methods): Stringified our
	required privileges.

	* rcd-rpc-log.c (rcd_rpc_log_register_methods): Stringified our
	required privileges.

	* rcd.c (main): Call rcd_privileges_init(), which defines our base
	set of privileges.

	* rcd-rpc.c (unix_rpc_callback): Hacked to use new privileges
	system.
	(rcd_rpc_register_method): Hacked to use the new privileges
	system.  We now take as our third arg a string containing the
	required privileges.

	* rcd-identity.c: Changed throughout to use the RCDPrivileges
	bitmasks instead of the authorization lists.
	(rcd_identity_approve_action): Added.
	(rcd_identity_foreach_from_password_file): Added.  Iterates across
	user/password file.
	(rcd_identity_update_password_file): Added.  Adds or updates
	entries in the user/password file.
	(rcd_identity_remove_from_password_file): Added.  Removes entries
	from the user/password file.

	* rcd-auth.c: Killed off.

	* rcd-privileges.c: Added.  New, improved, all-singing all-dancing
	privileges system.

2002-07-12  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-util.h: Added a bunch of #defines for fault codes, to
	make things a lot more sane.

	* rcd-rpc.c, rcd-rpc-log.c, rcd-rpc-packsys.c, rcd-rpc-prefs.c,
	rcd-rpc-utils.c: Use the new defines for fault codes instead of
	numbers.

	* rcd-rpc-packsys.c (packsys_find_latest_version): Find the
	installed version on the system, and if a version found in a
	channel isn't newer, throw a PACKAGE_IS_NEWER fault.  If it isn't
	found at all, throw a PACKAGE_NOT_FOUND fault.
	(find_latest_version): Check to make sure the package we're
	iterating over is newer than the installed version, if there is
	one.

2002-07-12  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_solve_dependencies): Removed.  It's
	just silly to have two API calls for this.
	(packsys_resolve_dependencies): Require a third argument, for a
	list of extra requirements.

2002-07-11  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (resolve_deps): Take an RCPackageDepSList of
	extra dependencies to add to the resolver.
	(packsys_solve_dependencies): Given a list of deps, get a
	resolution which will solve them.
	(packsys_what_provides, packsys_what_requires,
	packsys_what_conflicts): Check for a fault after parsing the
	argument list to prevent a failed assertion if the data passed in
	is bad.

	* rcd-rpc-util.c (rcd_xmlrpc_array_to_rc_package_dep_slist): Added.

2002-07-11  Joe Shaw  <joe@ximian.com>

	* rcd-rpc.packsys.c (resolve_deps): Instead of returning a list of
	packages to install or remove, return a list which contains
	packages, the operation to perform, and details on why it's being
	installed or removed.
	(rcd_rc_package_slist_to_xmlrpc_op_array): Added.  Given a list of
	packages and an RCResolver, create the operation array.
	(dep_get_package_info): Added.  Gets details on why a dependency
	is being added (ie, "depends on: libfoo")

2002-07-11  Jon Trowbridge  <trow@ximian.com>

	* rcd-unix-server.c (rcd_unix_server_run_async): Use
	g_return_val_if_fail instead of g_return_if_fail.

	* rcd-rpc-util.c (rcd_rc_package_spec_to_xmlrpc): Properly
	handle the has_epoch flag.
	(rcd_rc_package_dep_to_xmlrpc): Added.
	(rcd_xmlrpc_to_rc_package_dep): Added.

	* rcd-rpc-packsys.c (packsys_what_provides): Added.  XML-RPC
	wrapper around the rc_world_foreach_providing_package function.
	(packsys_what_requires): Added.  Wrapper around the
	rc_world_foreach_requiring_package function.
	(packsys_what_conflicts): Added. Wrapper around the
	rc_world_foreach_conflicting_package function.
	(rcd_rpc_packsys_register_methods): Register our new methods.

2002-07-10  Jon Trowbridge  <trow@ximian.com>

	* rcd-identity.c (rcd_identity_free): Free the password
	and the privileges list.

2002-07-10  Joe Shaw  <joe@ximian.com>

	* rcd-rpc.c (unix_rpc_callback): Implicitly give all local users
	view rights unless specified otherwise in the password file.

2002-07-10  Joe Shaw  <joe@ximian.com>

	* rcd-prefs.c (rcd_prefs_get_host): Get the hostname from the
	DefaultFreeURL override before looking in the actual
	configuration.

	* rcd-rpc-packsys.c (packsys_dump): Compress the packaging data
	and send it down as binary data.

	* rcd-rpc.c (run_server_thread): Check the return code from
	rcd_unix_server_run_async() and error out if it doesn't work.

	* rcd-unix-server.c (rcd_unix_server_run_async): Now returns an
	integer; 0 on success.

2002-07-10  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-packsys.c (build_updates_list): Filter out updates to
	unsubscribed channels.
	(packsys_update_summary): Added.  An XML-RPC method that returns a
	summary of the number of available updates.  This allows us to
	quickly check for updates w/o having to send all of the update
	information across the wire.
	(rcd_rpc_packsys_register_methods): Register the
	rcd.packsys.update_summary method.

2002-07-09  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_dump): Added.  Takes an XML dump of
	the RCWorld and sends it down the wire.
	(rcd_rpc_packsys_register_methods): Register it.

2002-07-09  Joe Shaw  <joe@ximian.com>

	* rcd-rpc.c (soup_shutdown_cb): Added.  Unrefs the soup server so
	it shuts down.
	(run_server_thread): Add the shutdown handler.

	* rcd-unix-server.c (shutdown_server_cb): Added.  Closes the
	listening socket and unlinks it.
	(rcd_unix_server_run_async): Add the shutdown handler.

2002-07-09  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (root_check): Even if the --allow-non-root option has been
	given, point out that things may fail to work when run w/o root
	privileges.

2002-07-08  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_transact): Take a boolean third
	argument to specify a "dry run".  It doesn't actually work yet, as
	there isn't a hook in libredcarpet for it yet.

2002-07-08  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-system.c (system_ping): Send distribution information
	over the wire.

	* rcd-unix-server.c (read_cred): Add some debugging output in the
	(supposedly impossible) case where getsockopt() returns a valid
	value, but the credentials passed through aren't there.

2002-07-08  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c (rcd_fetch_channel, download_package_file): Use
	rc_maybe_merge_paths() to build the correct paths for downloading
	channel data and packages not on the host server.

	* rcd-rpc-packsys.c (resolve_deps): Get details on the dependency
	failure and send them along in the fault.

2002-07-08  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (main): Add a shutdown handler to quit the main loop.

	* rcd-rpc-system.c (system_shutdown): Added.  Glue for the
	shutdown method.
	(rcd_rpc_system_register_methods): Register rcd.system.shutdown.

	* rcd-shutdown.c: Added.  Code to handle cleanly shutting down the
	daemon.

2002-07-08  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Add gnome-config.[ch] and parse-path.cP.

	* rcd-prefs.c: Make all of the getters read from the config file
	and all the setters write to it.

	* gnome-config.[ch], parse-path.cP: Added.  Mostly cut-and-pasted
	from libgnome, because we don't have a good reason to have a
	dependency upon it.

2002-07-07  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Define SYSCONFDIR, install the rcd binary.

	* rcd-auth.c, rcd-rpc-packsys.c, rcd-rpc.c: Eliminate the
	RCD_ENFORCE_AUTH env check and always require authorization.

	* rcd-identity.c (rcd_identity_from_password_file): Read the
	rc-passwd file from SYSCONFDIR.  Skip over lines which begin with
	a # as comments.

	* rcd-rpc.c (unix_rpc_callback): Fix an errant assert.

2002-07-06  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (daemonize): Open our rcd-messages file here, and redirect
	stdout and stderr to it.
	(debug_message_handler): Just write debug messages to stderr.  If
	we are daemonized, it will already have been redirected to
	rcd-messages.

	* rcd-query.c (rcd_query_match_string_ci): Fixed stupid typo.

2002-07-05  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (daemonize): Re-open stdin, stdout, stderr to /dev/null.

	* rcd-cache.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-fetch.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-log.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-module.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-query.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-rpc-sample.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-rpc.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-unix-server.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd.c: Replaced g_warning/g_error calls with rc_debug.

	* rcd-rpc.c (process_rpc_call): Don't measure the time it takes to
	process each call.  Replace some g_warnings with rc_debugs.
	(unix_rpc_callback): Replaced g_warning with rc_debug.
	(run_server_thread): Replaced g_warning with rc_debug.  Added a
	note indicating that if we can't start the RPC server, it is
	probably because another rcd process is already running.
	(rcd_rpc_register_method): Replaced g_warning with rc_debug.

	* rcd.c (option_parsing): Added.  Handles option processing with
	popt.
	(root_check): Added.  Check to make sure that the daemon is being
	run as root.  Complain if it isn't, unless the --allow-non-root
	was passed in on the command line.
	(daemonize): Fork, make a new process group for ourselves, close
	all file descriptors.  Unless rcd was run with --non-daemon on the
	command line, of course.
	(debug_message_handler): Write everything to /tmp/rcd-messages.
	(Or to stderr if we are running in non-daemon mode.)
	(initialize_logging): Put a notice that rcd has started in the
	system log.
	(initialize_rpc): Added.  Moved a few calls from main.
	(initialize_data): Added.  Also a small bit of code moved from
	main.  Today is gratuitous encapsulation day.

2002-07-03  Joe Shaw  <joe@ximian.com>

	* rcd-prefs.c: Add a bunch of "set" functions for many of the
	prefs.  Note that they don't do anything yet.

	* rcd-rpc-prefs.c: New file.  Adds three RPC calls:
	rcd.prefs.get_pref, rcd.prefs.set_pref, and rcd.prefs.list_prefs,
	which do the three things you'd expect them to.
	
	* rcd.c (main): Register the prefs RPC calls.

2002-07-03  Jon Trowbridge  <trow@ximian.com>

	* rcd-query.c (rcd_query_match_string_ci): Fixed memory leak.

	* rcd-log.c (cutoff_time_init, cutoff_time_match, rcd_log_query):
	Make the argument to the cutoff_time query part be a number of
	seconds in the past, instead of an absolute time.  Then we use
	this number, combined with the local time on the server, to
	compute the cut-off time. 

2002-07-03  Joe Shaw  <joe@ximian.com>

	* rcd-rpc.c (unix_rpc_callback): Serialize a permission fault if
	we can't get a username from the password file instead of
	asserting later.

2002-07-02  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c (rcd_fetch_packages): Fetch the package signature as
	well.

	* rcd-prefs.c (rcd_prefs_get_require_verified_packages): Added.

	* rcd-rpc-packsys.c (verify_packages): Added.  Verifies package
	signatures and calls run_transaction() when successfully completed.
	(download_packages): Call verify_packages() instead of
	run_transaction().
	(resolve_deps): Move most of the logic from
	packsys_resolve_dependencies() here.
	(packsys_resolve_dependencies): Mostly a shell around
	resolve_deps().
	(package_verify_dependencies): Added.  Mostly a shell around
	resolve_deps().
	(rcd_rpc_packsys_register_methods): Register verify_dependencies.

2002-07-01  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-util.c (rcd_rc_package_to_xmlrpc): If the package
	we are XML-RPCifying is a syatem package, try to guess
	the channel of origin and put that information in the
	"channel_guess" field.

	* rcd-log.c (package_name_match): Make string matches
	case-insensitive.
	(host_match): Make string matches case-insensitive.
	(user_match): Make string matches case-insensitive.
	(action_match): Make string matches case-insensitive.

	* rcd-rpc-util.c (rcd_rc_package_to_xmlrpc): Fixed the check
	for whether or not the package was installed.

2002-07-01  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c: Make all the channel metadata functions reference
	last known good files in /var/lib/rcd, not the cache, and always
	write them out, even if caching is turned off.
	(all_channels_cb): If we can't get data for a channel locally,
	download it.

	* rcd-rpc.c (rcd_rpc_server_start): Split the server starting
	stuff out of the init function.

	* rcd.c (main): Always try the local functions for channel list,
	channel data, and news.  Remove a big FIXME since it's fixed,
	explicitly call the rpc server start function.

2002-07-01  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (find_latest_version): If subscribed_only is
	set, skip over packages in unsubscribed channels.
	(packsys_find_latest_version): Take a second parameter: whether to
	only return packages in subscribed channels.

2002-06-27  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (main): Added a FIXME comment about a potential caching
	bug.

	* rcd-query-packages.c (name_match): Use case-insensitive
	matching.
	(summary_match): Use case-insensitive matching.
	(description_match): Use case-insensitive matching.
	(text_match): Use case-insensitive matching.
	(channel_match): Use case-insensitive matching.

	* rcd-query.c: Added string versions of CONTAINS_WORD and
	NOT_CONTAINS_WORD to our query2str table.  Add query_str_folded
	to the "private" part of RCDQueryPart.
	(rcd_query_match_string): Support CONTAINS_WORD and
	NOT_CONTAINS_WORD operations.
	(rcd_query_match_string_ci): Added.  Does case-insensitive
	matching.
	(rcd_query_begin): Initialize query_str_folded in each part.
	(rcd_query_end): Free query_str_folded (as necessary) in
	each part.

	* rcd-query.h: Added RCD_QUERY_CONTAINS_WORD and
	RCD_QUERY_NOT_CONTAINS_WORD to RCDQueryType enum.

	* rcd-fetch.c (rcd_fetch_channel_list_local): Better resource
	cleanup.
	(rcd_fetch_news): Removed an extra g_free of the URL string ---
	thanks valgrind!

	* rcd-unix-server.c: Added license.

	* rcd-unix-server.h: Added license.

	* rcd-transfer-http.c: Fixed compiler warning and added license.
	
	* rcd-transfer-file.c: Added license.

	* rcd-rpc.h: Added license.

	* rcd-rpc-util.h: Added license.

	* rcd-rpc-util.c: Added license.

	* rcd-rpc-system.h: Added license.

	* rcd-rpc-sample.h: Added license.

	* rcd-rpc-sample.c: Fixed compiler warning and added license.

	* rcd-rpc-packsys.h: Added license.

	* rcd-rpc-packsys.c: Fixed compiler warning and added license.

	* rcd-query-packages.c: Fixed compiler warning.

	* rcd-news.h: Include time.h

	* rcd-news.c: Fixed compiler warning.

	* rcd-log.c: Fixed compiler warning.

	* rcd-log-entry.c: Fixed compiler warning.

	* rcd-fetch.c: Fixed compiler warning.

	* rcd-auth.c: Fixed compiler warning.

2002-06-26  Jon Trowbridge  <trow@ximian.com>

	* rcd-transfer.c (pending_file_data_cb): Update using
	rcd_pending_update_by_size.

	* rcd-rpc-system.c (system_poll_pending): Add the completed
	size and total size to our XML-RPC struct.

	* rcd-rpc-packsys.c (update_download_progress): Update our pending
	object with rcd_pending_update_by_size.

	* rcd-query-packages.c (text_match): Added.  An RCDQueryPart
	callback for matching a string against a package's name,
	summary or description.

	* rcd-pending.c (rcd_pending_init): Initialize completed_size and
	total_size to -1.
	(rcd_pending_update): Set completed_size and total_size to -1,
	invalidating them if they had been previously set by a call to
	rcd_pending_update_by_size.
	(rcd_pending_update_by_size): Added.  Updates an RCDPending by
	specifying the total size of the task and the amount of the task
	that has been completed.  The percentage complete is automatically
	calculated from those two quantities.
	(rcd_pending_get_completed_size): Added.  An accessor.
	(rcd_pending_get_total_size): Added.  An accessor.

2002-06-25  Joe Shaw  <joe@ximian.com>

	* rcd-cache.c (rcd_cache_entry_cancel): Added.  Closes the cache
	entry, but does not make it valid in the cache.

	* rcd-fetch.c (rcd_fetch_packages): Return a numeric ID of the
	overall package transfer so it can be cancelled later.
	(rcd_fetch_packages_abort): Aborts the package transfers
	associated with an ID.

	* rcd-rpc-packsys.c (packsys_abort_download): Added.  Aborts a
	download of a package transaction.
	(rcd_rpc_packsys_register_methods): Register the
	rcd.packsys.abort_download call.

	* rcd-transfer-http.c (http_done): Only close the cache entry if
	the download was without error (including abort).  Otherwise,
	cancel the cache entry.
	(http_abort): Set the RCD_TRANSFER_ERROR_CANCELLED before
	cancelling the SoupMessage, and don't emit
	rcd_transfer_emit_done(), as that'll be done in http_done()
	unconditionally.

	* rcd-transfer.c (pending_file_done_cb): If the transfer was
	cancelled rcd_pending_abort() on the pending, otherwise
	rcd_pending_finished().

2002-06-25  Jon Trowbridge  <trow@ximian.com>

	* rcd-fetch.c (rcd_fetch_news): Doh!  It is an error if doc == NULL,
	not if doc != NULL.

	* rcd-query.c (query2str): Added 'begin-or' and 'end-or' string
	representations of RCD_QUERY_BEGIN_OR and RCD_QUERY_END_OR.
	Terminate the array with RCD_QUERY_INVALID, not RCD_QUERY_LAST.
	(rcd_query_type_from_string): Check for end of array by looking
	for RCD_QUERY_INVALID.
	(rcd_query_begin): Check that our begin-ors and end-ors balance
	properly.  When calling a part's ->initialize method, make
	sure the engine is non-NULL.
	(rcd_query_match): Handle ors.
	(rcd_query_end): When calling a part's ->finalize method,
	make sure the engine is non-NULL.

2002-06-24  Jon Trowbridge  <trow@ximian.com>

	* rcd-module.c (rcd_module_init): If the module dir doesn't
	exist, print a warning and return.

	* rcd-fetch.c (get_channel_list_url): Better error handling.
	(rcd_fetch_channel_list): Better error handling.
	(rcd_fetch_news): Better error handling.

	* rcd-rpc-packsys.c (packsys_subscribe): Return zero and undo the
	change if we couldn't save the subscriptions file to disk
	(packsys_unsubscribe): Return zero and undo the change if we
	couldn't save the subscriptions file to disk.

	* rcd-subscriptions.c (rcd_subscriptions_load): Changed to return
	a bool indicating whether the operation succeeded or failed.
	(rcd_subscriptions_save): Changed to return a bool indicating
	whether the operation succeeded or failed.

	* rcd-log.c (rcd_log_scan): Do the right thing if we encounter
	a zero-length log file.

	* rcd-fetch.c (rcd_fetch_all_channels): Return a list of
	pending ids for our channel downloads.

	* rcd-rpc-system.c (system_poll_pending): Send some more info
	about our pending object.
	(system_get_all_pending): Added.
	(rcd_rpc_system_register_methods): Register the get_all_pending
	method.

	* rcd-pending.c (rcd_pending_get_all_active_ids): Added.
	(rcd_pending_is_active): Added.

2002-06-19  Joe Shaw  <joe@ximian.com>

	* rcd-pending.c (rcd_pending_get_latest_message): Added.

	* rcd-rpc-packsys.c (transact_step_cb): We probably don't want to
	push the same message into the pending twice in a row.  Get's rid
	of the annoying "Removing" messages for each package removed in
	the client.
	(update_log): Added.  Logs the package transactions.
	(packsys_transact): Fix some package lifecycle issues.

	* rcd-rpc-util.c (rcd_rc_package_from_name,
	rcd_rc_package_from_xmlrpc_package): ref the package.

	* rcd-rpc.c (process_rpc_call, unix_rpc_callback,
	soup_rpc_callback): Pass along the client host making the call,
	along with the identity associated with the call.  Requires CVS
	Soup.

2002-06-18  Jon Trowbridge  <trow@ximian.com>

	* rcd-log.c: Added some comments describing our cutoff
	logic in more detail.

	* rcd.c (main): Fetch the news when we start up.

	* rcd-fetch.c (rcd_fetch_news): Added.  Download our RDF news.
	(rcd_fetch_news_local): Get the news from our local cache.

	* rcd-rpc-news.c: Added.  XML-RPC glue for news.

	* rcd-news.c: Added.  A simple structure to carry around
	news information, and code for maintaining a global news
	list.

2002-06-18  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (prepend_pkg): Don't add a package to be
	uninstalled to the hash if it's not already installed on the
	system.

	* rcd-rpc-util.c (rcd_debug_serialize): Make this a function from
	a #define so I can call it in gdb.

2002-06-17  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c: Resurrected packsys_resolve_dependencies().
	Given a list of packages to be installed and removed, it returns a
	list of additional packages to be installed and removed to satisfy
	dependencies.

2002-06-17  Jon Trowbridge  <trow@ximian.com>

	* rcd.c: Get rid of a warning by #including rcd-rpc-log.h

	* rcd-rpc-log.c: Added.  XML-RPC magic for log queries.

	* rcd.c (main): Register log methods.

	* rcd-rpc-util.c (rcd_rc_package_spec_to_xmlrpc): Made non-static
	so that I can use it in rcd-rpc-log.c.

	* rcd-query.c (rcd_query_begin): Set each part's 'processed' flag
	to FALSE.
	(rcd_query_match): Skip parts whose processed flag is TRUE.

	* rcd-log.c (rcd_log): Directly write out stringified log message,
	checking to make sure that the log file has been properly
	initialized.
	(rcd_log_query): Implements log querying, using the same
	QueryEngine/QueryParts framework as package queries.

	* rcd-log-entry.c (spec_to_str): Renamed from spec_str.  Changed
	log format to be more efficiently parseable.
	(split_on_vbar): A custom, high-efficiency line-splitter.
	(spec_from_str): Parse our a RCPackageSpec.
	(rcd_log_entry_parse): Implemented.  Parses log lines in a fairly
	efficient manner, without any memory allocs or frees.

2002-06-14  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_package_info): Added.  Returns
	details on a package necessary for an "rpm -qi" like command.
	(rcd_rpc_packsys_register_methods): Register the channel-refresh
	heartbeat func here, and check in the heartbeat func that a
	packaging system lock isn't held so we don't end up refreshing the
	channel data in the middle of a transaction.
	(run_transaction): Grab the lock at the start of the transaction
	and release it at the end, start the heartbeat after the modules
	have been loaded.

	* rcd.c: Moved the channel refreshing heartbeat func out of here.

2002-06-14  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c: When adding messages to an RCDPending, use
	strings that will be parsed by the client instead of user-visible
	strings, to keep localization issues out of the daemon and in the
	client where they belong.

	* rcd-transfer-file.c (file_get_local_filename): Return the full
	path to the file instead of just the filename.

2002-06-14  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c: Added _local functions which read channel data from
	only the cache and return success.

	* rcd.c (main): Try to load the channels off of disk first and
	then fetch from the net if they're unavailable.

2002-06-14  Joe Shaw  <joe@ximian.com>

	* rcd-cache.c: Mostly redone.  Most actions are now performed on a
	per-transfer RCDCacheEntry.  Entity tag and modification data are
	now kept in a in-memory cache.

	* rcd-transfer.c: Clean this up a ton, and make it more generic
	for protocol handlers.  Split out the file and http protocol
	handlers into their own files.

	* rcd-transfer-file.c, rcd-transfer-http.c: Added.

	* rcd-fetch.c: Update for all the cache and transfer API changes.

	* rcd-rpc-packsys.c (run_transaction): If caching is turned off,
	clean up the recently downloaded package files.
	(download_packages): Check to make sure the package_filename set
	in the package exists... if not, download the file again.

	* rcd-unix-server.c (rcd_unix_server_run_async): Check the return
	values from bind () and listen () and throw a warning about not
	being able to start the Unix server.

2002-06-13  Joe Shaw  <joe@ximian.com>

	* rcd-transfer.c (rcd_transfer_class_init): Change the marshal's
	arguments from STRING:INT to POINTER:UINT.  Since the data being
	passed through isn't null-terminated, it can't be passed around as
	a string.

2002-06-13  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (initialize_logging): Initialize our logfile.

	* rcd-log-entry.c: Added.  An object for holding log info.

	* rcd-log.c: Added.  Basic code to initialize logging and write
	RCDLogEntry items out to the log file.

2002-06-12  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_search): Renamed from packsys_query
	to match the design doc.
	(run_transaction): Send down the reason for the transaction
	failure in the message.

2002-06-12  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-packsys.c (build_updates_list): Send the relevant
	package update descriptions along with each update.

2002-06-12  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c (rcd_fetch_packages): Take another callback to give
	progress on the file itself.

	* rcd-pending.c (rcd_pending_get_user_data,
	rcd_pending_set_user_data): Remove these... it's a GObject, so we
	can just use g_object_{set|get}_data().
	(rcd_pending_add_message, rcd_pending_get_messages): Added.
	Allows persistent messages to be set on an RCDPending so important
	info isn't lost in between polls.

	* rcd-rpc-packsys.c: Add messages to the pending object when we do
	important things, update it in package download progress callback.

	* rcd-rpc-system.c (system_poll_pending): Serialize the messages.

	* rcd-transfer.c: Use gsize for file sizes throughout.

2002-06-11  Joe Shaw  <joe@ximian.com>

	* rcd-fetch.c (rcd_fetch_packages): Added.  Downloads a list of
	packages and calls the provided callback when finished with all of
	them.

	* rcd-rpc-packsys.c (packsys_find_latest_version): Added.  Given a
	name, it finds the latest version in the available channels.
	(download_packages): Check to make sure we have packages to
	download and fire 'em off.
	(packsys_transact): If we don't need to download packages, begin
	the transaction.

	* rcd-rpc-util.c (rcd_rc_package_from_xmlrpc_package): Fix this up
	so it checks the channel before the installed bit.

	* rcd-transfer.c (http_done): Make sure we close the cache after
	we're done with the transfer.

	* rcd-unix-server.c (rcd_unix_server_run_async): Set ourselves up
	to ignore SIGPIPE.
	(read_data): Handle an error condition from g_io_channel_write()
	in the case of a SIGPIPE so we don't get ourselves into an
	infinite loop using 100% CPU.

2002-06-11  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-util.c (rcd_rc_package_to_xmlrpc): Pass along infomation
	about importance when a package is an update.

	* rcd-rpc-packsys.c (packsys_get_updates): Added.  Implements
	the XML-RPC get_updates method.
	(rcd_rpc_packsys_register_methods): Register the get_updates
	method.

2002-06-11  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_transact): Don't allow packages to be
	specified by name when doing an install, as it doesn't contain
	enough information to be really useful.

	* rcd-rpc-util.c (rcd_rc_package_to_xmlrpc): Change the
	"installed" flag to mean that there is a package installed on the
	system with the same name.

2002-06-07  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_refresh_all_channels): Added.

	* rcd.c (refresh_channels_cb): Load the subscriptions after
	refreshing the channel list so we maintain the correct
	subscription info.

2002-06-07  Jon Trowbridge  <trow@ximian.com>

	* rcd-transfer.c (rcd_transfer_finalize): Check for NULL to
	avoid a run-time glib warning.

2002-06-07  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c:
	* rcd-rpc.c:
	* rcd-unix-server.c: Fix up warnings

	* rcd.c (remove_channel_cb): Uncomment the remove channel call.
	Requires updated libredcarpet.

2002-06-06  Joe Shaw  <joe@ximian.com>

	* rcd-heartbeat.c: Added.  Runs a heartbeat process which modules
	can register against.

	* rcd-prefs.c (rcd_prefs_get_heartbeat_interval): Added.

	* rcd.c (main): Set up the heartbeat function for refreshing the
	channels and start it.

2002-06-05  Joe Shaw  <joe@ximian.com>

	* rcd-rpc-packsys.c (packsys_query_file): Call
	rc_xmlrpc_to_rc_package() and pass in the types we accept.
	(run_transaction): Re-get the system packages after a transaction.
	(package_transact): Call rc_xmlrpc_to_rc_packagE() and pass in the
	types we accept.
	(packsys_transaction_get_status): Removed.  We can just use
	rcd.system.poll_pending().
	(rcd_rpc_packsys_register_methods): Don't register
	transaction_get_status().

	* rcd-rpc-util.c (rcd_rc_package_spec_to_xmlrpc):
	XMLRPC_FAIL_IF_FAULT() after trying to get each element.
	(rcd_rc_package_from_name, rcd_rc_package_from_file,
	rcd_rc_package_from_streamed_package,
	rcd_rc_package_from_xmlrpc_package): Added these functions which
	take xmlrpc_values and somehow get RCPackage structures for them.
	_from_name() is still broken.  Haven't decided if I like this API
	yet.
	(rcd_xmlrpc_to_rc_package): Added.  Calls a number of the above
	functions depending on flags that were passed into it specifying
	the types to accept.
	(rcd_xmlrpc_array_to_rc_package_slist): Added.

	* rcd-unix-server.c (rcd_unix_server_run_async): Make the socket
	writable by all users.
	
2002-06-05  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-packsys.c (packsys_subscribe): Added.
	(packsys_unsubscribe): Added.
	(rcd_rpc_packsys_register_methods): Register our subscribe and
	unsubscribe methods.

2002-06-03  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-packsys.c (packsys_refresh_channel): Added.  Given a
	channel id, reloads the channel's package info.
	(rcd_rpc_packsys_register_methods): Register the refresh_channel
	method.

	* rcd-fetch.c (rcd_fetch_channel): Return the id of the RCDPending
	associated with the package info transfer.

	* rcd-rpc-system.c (system_ping): Return the system time along
	with the other 'ping' info.
	(system_poll_pending): Pass along more information from the
	RCDPending object.

2002-06-03  Joe Shaw  <joe@ximian.com>

	* rcd-auth.c (auth_action_requirements_met): Fix a braindead goto.

	* rcd-pending.c (rcd_pending_get_user_data,
	rcd_pending_set_user_data): Added.  Allows some user data to be
	associated with an RCDPending dingus.

	* rcd-rpc-packsys.c (packsys_query): If we get a RCD_QUERY_INVALID
	back from the conversion, set a fault.
	(packsys_transact, packsys_transaction_get_status): Reenabled, does
	authentication and uses RCDPending.

	* rcd-rpc-util.c (rcd_rc_package_to_xmlrpc): Drop the
	package_filename and signature_filename fields... a client
	shouldn't need to know these.
	(rcd_xmlrpc_streamed_array_to_rc_package_slist): Added.

	* rcd-rpc.c (process_rpc_call): Set the caller's identity.
	(rcd_rpc_get_caller_identity): Added, allows RPC calls to get
	their caller's identity.  I'm a little worried about reentrancy
	here, so spit out a warning if it ever happens.

	* rcd-unix-server.c (read_cred): Change debug output to only be
	one line.

2002-06-03  Jon Trowbridge  <trow@ximian.com>

	* rcd.c (initialize_logging): Get initial daemon output from the
	rcd_about_* functions.

	* rcd-module.c: Re-ordered #include directives.

	* rcd-unix-server.c: Re-ordered #include directives.

	* rcd-rpc.c: Re-ordered #include directives.

	* rcd-rpc-util.h: Added RCD_XMLRPC_STRUCT_GET_DOUBLE and
	RCD_XMLRPC_STRUCT_SET_DOUBLE macros.

	* rcd-rpc-util.c (rcd_xmlrpc_streamed_to_rc_package): Set package
	to NULL to silence compiler warning.

	* rcd-rpc-system.c (system_ping): Have ping return server info
	instead of just the time.
	(system_poll_pending): Added.  This allows us to poll for the
	status of pending operations to see what happened, allow us to
	update progress bars, etc.

	* rcd-fetch.c (rcd_fetch_channel_list): Make our channel list
	download be a blocking transfer.
	(rcd_fetch_channel): ...but make our channel package info download
	non-blocking.

	* rcd-transfer.c (rcd_transfer_finalize): Unref our RCDPending.
	(rcd_transfer_set_flags): Anal arg checking.
	(rcd_transfer_set_proxy_url): Anal arg checking.
	(rcd_transfer_get_pending): Accessor for our RCDPending.
	(rcd_transfer_get_error): Anal arg checking.
	(rcd_transfer_begin): If we aren't a blocking transfer (and don't
	explicitly say not to do so), create an RCDPending object and hook
	up the signals so that it will track the transfer's progress.
	Return the id of the RCDPending instead of a GByteArray.
	(rcd_transfer_begin_blocking): An explicit entry-point for
	blocking transfers, which won't create an RCDPending and returns a
	GByteArray.

	* rcd-transfer.h: Add an RCDPending to the RCDTransfer struct.

	* rcd-about.c: Added.  A place to hide important strings behind an
	simple API.

	* rcd-pending.c: Added.  A gadget for tracking the progress of
	long-running operations in the daemon.

2002-05-30  Joe Shaw  <joe@ximian.com>

	* rcd-auth.c (rcd_string_to_auth_action_list): Fix an invalid
	return type.

	* rcd-rpc-packsys.c (packsys_query_file): Uncomment this and bring
	it up to snuff, register the call.

	* rcd-rpc-util.c (rcd_xmlrpc_streamed_to_rc_package): Added.
	Takes either a filename or a streamed package, queries it, and
	returns an RCPackage instance.

	* rcd-unix-server.c (read_data): Only verify the credentials if
	they haven't been verified previously.

2002-05-30  Joe Shaw  <joe@ximian.com>

	* rcd-auth.c: Add a new special auth type, "superuser", which
	grants all rights to any user who has it.

	* rcd-rpc.c (process_rpc_call): Use the new preinvoke method code
	I added to xmlrpc-c to do access control.  It's a lot cleaner, and
	you can't subvert it by using system.multicall(). :)
	(access_control_check): Added.  Does an ACL lookup and check
	before all RPC calls and sets a fault if not approved.
	(unix_rpc_call): Implement identites for Unix domain RPC calls.

	* rcd-unix-server.c (RCDUnixServerCallback): Return a handle which
	contains both the method data and credential info.
	(read_cred): Check to make sure we got valid credentials and put
	that info in the handle.

2002-05-29  Joe Shaw  <joe@ximian.com>

	* rcd-auth.c: Made more extensible for modules by making ACLs
	GQuark based and passing around lists of GQuarks for privileges.

	* rcd-identity.c (rcd_identity_from_password_file):
	* rcd-rpc-packsys.c (rcd_rpc_packsys_register_methods):
	* rcd-rpc-sample.c (rcd_module_load): 
	* rcd-rpc-system.c (rcd_rpc_system_register_methods): Update to
	reflect changes in auth API.

	* rcd-module.c (rcd_module_init): Use rc_debug

	* rcd-prefs.c (rcd_prefs_get_host): Use RC_MAGIC if it is set.

	* rcd-rpc.c (process_rpc_call): Move some shared code between the
	protocols here.

2002-05-29  Jon Trowbridge  <trow@ximian.com>

	* rcd-rpc-packsys.c (packsys_get_channels): Added.
	(add_package_cb): Ref the package, so we don't leave a dangling
	pointer in our world later when we free the list and its contents.
	(rcd_rpc_packsys_register_methods): Register the get_channels
	method.

	* rcd-rpc-util.c (rcd_rc_channel_to_xmlrpc): Added.

	* rcd-query-packages.c: Added.  Implements package queries on top
	of the framework in rcd-query.c.

	* rcd-query.c: Abstracts this code into a generalized querying
	mechanism (which we will be able to also use for log & news
	queries).

	* rcd-subscriptions.c: Added.  Reads and writes the XML file
	containing the subscription information.

	* rcd-fetch.c (rcd_fetch_channel): Use
	rc_world_add_packages_from_buffer so that we get the full benefit
	of the SAX parser.

2002-05-28  Joe Shaw  <joe@ximian.com>

	* rcd-auth.c: Change RCDAuthAction to #defines which can be
	bitwise ORed.
	(rcd_auth_action_to_string): No longer const, can output a list of
	strings
	(rcd_string_to_auth_action): Parses a list of strings and returns
	an RCDAuthAction
	(rcd_auth_approve_action): Ease up on the argument restrictions
	for now.  If RCD_ENFORCE_AUTH is enabled, actually check
	privileges.

	* rcd-identity.c (rcd_identity_from_password_file): Added.  Looks
	for a user in the password file and returns an RCDIdentity with
	its username, password, and privileges.

	* rcd-rpc.c (rcd_rpc_init): Initialize a hash table for storing
	method info.
	(rcd_rpc_register_method): Take an RCDAuthAction parameter
	specifying the privileges required to call this method.  Add
	method info to the hash table.
	(soup_rpc_callback): Authenticate the user from HTTP Basic auth
	against an RCDIdentity from the password file.  Then look up the
	method info from the hash table and call rcd_auth_approve_action()
	to verify the privileges.

	* rcd-rpc-packsys.c (rcd_rpc_packsys_register_methods):
	* rcd-rpc-sample.c (rcd_module_load):
	* rcd-rpc-system.c (rcd_rpc_system_register_methods): Pass in
	privileges required to call these methods.

2002-05-28  Jon Trowbridge  <trow@ximian.com>

	* rcd.c: Added stuff to download channel and package info and to
	use a debug display handler.  Removed some old testing code.

	* rcd-transfer.c: Poked at the various bits of rc_debug-ism.

	* rcd-fetch.c: Added.  Some code for downloading channel and
	package information and storing it in the RCWorld.

	* rcd-cache.c (rcd_cache_open): Don't free cache_fn and tmp_fn
	until we've finished using them.

	* rcd-module.c: Changed to use rc_debug for spew.

	* rcd-prefs.c (rcd_prefs_get_cache_dir): Use a cache file under
	/tmp for now, so there is less warning spew when not running as
	root.

2002-05-24  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Add in rcd-rpc-packsys.[ch], rcd-rpc-util.[ch],
	rcd-unix-server.[ch]: Added these.

	* rcd-rpc.c (unix_rpc_callback): Handle an XML-RPC callback over
	unix domain sockets.
	(rpc_callback, default_callback): Prefix these functions with
	"soup_"
	(server_init): Removed this function, it wasn't long enough to be
	useful.
	(run_server_thread): Move the contents of server_init() here, add
	a call to rcd_unix_server_run_async() for handling requests over
	unix domain sockets.

	* rcd-rpc.h: Move header includes inside of the only-include-once
	#ifdef magic.

	* rcd-rpc-packsys.[ch]: Added.  Contains packaging system RPC
	calls (just query for now).

	* rcd-rpc-util.[ch]: Added.  Contains utility functions for
	converting an RCPackage or RCPackageSList to XML-RPC values and
	XML-RPC values into RCDQueryParts.

	* rcd-unix-server.[ch]: Added.  Lame first cut at doing XML-RPC
	calls over unix domain sockets.

	* rcd.c (initialize_rc_world): Register the packaging system RPC
	methods.

2002-05-24  Joe Shaw  <joe@ximian.com>

	* Makefile.am: Lots of magic

	* rcd-module.c: Added dynamic module loading.

	* rcd-rpc.c:
	* rcd-rpc-system.c:
	* rcd-rpc-sample.c: Added RPC framework with a sample module
	implementation and some system functions (query_module, ping,
	etc.)

	* rcd.c: Initialize the module loader, run a main loop.

2002-05-23  Jon Trowbridge  <trow@ximian.com>

	* rcd-query.c: Added a framework for complex queries.

