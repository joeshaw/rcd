CONTRIBUTING
------------
Contributors to rcd and related modules (libredcarpet and rc) are more
than welcome.  rcd is written in C and heavily uses the glib library.

Discussion takes place on the rc-devel@lists.ximian.com mailing list.
Patches should be sent there, and should follow the existing stylistic
conventions, be accompanied by a ChangeLog entry, and sent in GNU
unified diff format (diff -u).

Please DO NOT commit to CVS without approval from one of the
maintainers.

BUILDING
--------
Building rcd is hard.  Like, a total pain in the ass.  Hopefully we
will soon have development packages up so you don't have to go
through the hell of building this stuff yourself.

* glib 2

  First, you will need glib2.  It comes with Red Hat 7.3 and up, and
  probably every distro after.  If you don't have it, you can get it
  from http://www.gtk.org.

* Soup

  You will need to build Soup, an HTTP transfer library, against glib2.
  Check out the soup-0-7 branch from the soup module in GNOME CVS.
  Configure it with the --enable-glib2 option, and install it into some
  funky prefix.  The library names aren't different between a glib 1.2
  build and a glib 2 build, so installing into a different prefix
  will ensure you don't accidentally overwrite an existing version!
  (Evolution uses Soup, for instance.)

* xmlrpc-c

  Get the xmlrpc-c 0.9.10 tarball from
  http://primates.ximian.com/~joe/xmlrpc-c and untar it.

  You'll need to apply a couple of patches to it; these patches have
  been sent upstream and will likely go into a 0.9.11 release if it
  ever happens.  The first (libxml2.patch) adds libxml2 backend support
  so we don't have to link against expat (we link against libxml2 already
  anyway).  The second (preinvoke.patch) adds preinvoke support, so we
  can do access control on methods.  Apply them both
  ("patch -p1 < [patch]" from the toplevel xmlrpc-c source dir).  Then
  engage in highly entertaining build fun:

      libtoolize --force --copy
      aclocal
      autoheader
      automake --gnu
      autoconf
      ./configure --prefix=/opt/rcd --enable-libxml2-backend \
         --disable-abyss-server --disable-cgi-server \
	 --disable-cplusplus --disable-libwww-client

* libredcarpet

  libredcarpet is the packaging system independent backend and library
  containing a lot of useful functions used in Red Carpet and rcd.  It's
  in GNOME CVS, module libredcarpet, and probably in tarball form from
  wherever you got the rcd tarball.

  You'll need to pass in some configure flags to enable backends for your
  distro.  If you are on an RPM system, you'll want to pass in:

    --enable-backend-rpm --enable-rpm-version=[version]

  If on Debian:

    --enable-backend-dpkg

And now you're ready to build rcd.

Since you should have installed Soup and xmlrpc-c in a weird prefix,
you will probably want to pass in --with-xmlrpc-prefix=[prefix] and
--with-soup=[path] to configure/autogen.sh.  You may also need to set
your PKG_CONFIG_PATH to the paths containing the Soup and libredcarpet
pkgconfig files ($prefix/lib/pkgconfig).

Once all of that is taken care of, you should be off and running.
Good Luck.